---
title: "Title"
author: "Elizna Maasdorp"
date: "`r format(Sys.time(), '%d %B, %Y')`"
format: 
  html:
    embed-resources: true
    page-layout: full
    fig-width: 24
    fig-height: 18
editor: source
editor_options: 
  chunk_output_type: console
execute: 
  echo: true
  warning: false
  error: false
---

# Overview

```{r}
#| echo: false

library(knitr)
library(kableExtra)
library(tidyverse)
library(GEOquery)
library(furrr)
library(tictoc)
library(conflicted)

conflicts_prefer(dplyr::select(),
                 dplyr::filter(),
                 dplyr::rename(),
                 Biobase::combine()
                 )

# colours

# themeCols <- tibble(hex3 = c("#47e5bc", "#F54E56", "#FFA90B"),
#                     hex7 = c("#47e5bc", "#F54E56", "#FFA90B",
#                              "#6AECF0", "#293241", "#716F66", "#790600" ),
#                     hex4 = c("#dd1155", "#FAD711", "#0CEE84",  "#5F0030"),
#                     hex5 = c("#084c61", "#db504a", "#F8CB15", "#72BAB4", 
#                              "#30454E"))


# ggplot theme

chapTheme <- theme_classic() + 
  theme(text = element_text(color = "grey30",
                            size = 18),
        line = element_line(color = "grey30", linewidth = 0.25),
        rect = element_rect(color = "grey30", linewidth = 0.25),
        panel.background = element_rect(colour = "grey70", linewidth = 2),
        axis.line = element_blank(),
        axis.ticks = element_blank(),
        strip.background = element_rect(colour = "grey70",
                                        linewidth = 0.25),
        strip.text = element_text(colour = "grey30"))

theme_set(chapTheme)


```

```{r}
# from hemera
pheno <- read_rds("pheno.rds")

sort(unique(pheno$key))

pheno %>% 
  count(geo_accession, geo_set)

pheno %>% 
  distinct(geo_set, key) %>% 
  count(key) %>% 
  arrange(key) %>% 
  print(n = Inf)

```


```{r}
terms_experi <- tibble(x = c("experimentData|PMIDs|pmid_nr|yyyy")) %>% 
  separate(x, into = c("dataset", "term", "sql_name", "sql_table"), sep = "\\|")

terms_pheno <- tibble(x = c(
           "phenoData|clinical information|xxxxx|TBdata_clin",
           "phenoData|contact_email|contact_email|TBdata_meta_char",
           "phenoData|contact_name|corr_author|yyyy",
           "phenoData|disease state|disease_state|yyyy",
           "phenoData|extract_protocol|xxxxxx|yyyy",
           "phenoData|group|xxxxxx|yyyyy",
           "phenoData|instrument_model|sequencing_platform|yyyyy",
           "phenoData|library_strategy|xxxxx|yyyyy",
           "phenoData|mgit|xxxxxx|yyyyy",
           "phenoData|molecule|xxxxxx|yyyyy",
           "phenoData|organism|xxxxxx|yyyyy",
         
           "phenoData|sample_code|xxxxxx|yyyyy",
           "phenoData|source_name|sample_type|yyyyy",
           "phenoData|subject|xxxxx|yyyyy",
           "phenoData|time:|xxxxxx|yyyyy",
           "phenoData|timetonegativity|xxxxxx|yyyyy",
           "phenoData|tissue|xxxxx|yyyyy",
           "phenoData|treatmentresult|xxxxxx|yyyyy",
           "phenoData|xpert|xxxxxx|yyyyy")) %>% 
  separate(x, into = c("dataset", "term", "sql_name", "sql_table"), sep = "\\|")
 
tic()     
info_list <- future_map(terms$term,
                        ~pheno %>% 
  filter(str_detect(key, .x) | 
           str_detect(value, .x)) %>% 
  distinct())
toc() # 5 secs

names(info_list) <- terms$term

info_list




```


